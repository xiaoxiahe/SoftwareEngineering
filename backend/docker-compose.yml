services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ev-charging-backend
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ev_charging
      - DB_USER=ev_user
      - DB_PASSWORD=secure_password123
      - JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network
    restart: unless-stopped
    volumes:
      - ./configs:/app/configs
      - ./migrations:/app/migrations

  postgres:
    image: postgres:15-alpine
    container_name: ev-charging-postgres
    environment:
      - POSTGRES_DB=ev_charging
      - POSTGRES_USER=ev_user
      - POSTGRES_PASSWORD=secure_password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - backend-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ev_user -d ev_charging"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: ev-charging-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  backend-network:
    driver: bridge
